{
  "info": {
    "name": "Foodgram",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "/api/users/",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{url}}/api/users/",
          "host": ["{{url}}"],
          "path": ["api", "users", ""]
        }
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status code is 200', function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "pm.test('Response should be an array', function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.results).to.be.an('array');",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "/api/users/",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"email\": \"test@example.com\",\n    \"username\": \"testuser\",\n    \"first_name\": \"Test\",\n    \"last_name\": \"User\",\n    \"password\": \"testpassword\"\n}"
        },
        "url": {
          "raw": "{{url}}/api/users/",
          "host": ["{{url}}"],
          "path": ["api", "users", ""]
        }
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status code is 201', function () {",
              "    pm.response.to.have.status(201);",
              "});",
              "pm.test('Response should be an object with id, email, username, first_name, and last_name', function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData).to.have.keys('id', 'email', 'username', 'first_name', 'last_name');",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "/api/tags/",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{url}}/api/tags/",
          "host": ["{{url}}"],
          "path": ["api", "tags", ""]
        }
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status code is 200', function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "pm.test('Response should be an array', function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData).to.be.an('array');",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "/api/tags/{id}/",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{url}}/api/tags/1/",
          "host": ["{{url}}"],
          "path": ["api", "tags", "1", ""]
        }
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status code is 200', function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "pm.test('Response should be an object with id, name, color, and slug', function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData).to.have.keys('id', 'name', 'color', 'slug');",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    }
  ]
}
