name: Foodgram workflow

on:
  push:
    branches: [ master ]

jobs:
  tests:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3

  build_and_push_to_docker_hub:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-22.04
    needs: tests
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

  deploy:
    runs-on: ubuntu-22.04
    needs: build_and_push_to_docker_hub
    steps:
      - name: executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.PROD_HOST }}
          username: ${{ secrets.PROD_USER }}
          key: ${{ secrets.PROD_SSH_KEY }}
          passphrase: ${{ secrets.PROD_PASSPHRASE }}
          script: |
            sudo docker compose stop
            if [ -n "$(sudo docker image ls -q ${{ secrets.DOCKER_USERNAME }}/foodgram_backend:latest)" ]; then
              sudo docker image rm ${{ secrets.DOCKER_USERNAME }}/foodgram_backend:latest
            fi
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/foodgram_backend
            if [ -n "$(sudo docker image ls -q ${{ secrets.DOCKER_USERNAME }}/foodgram_frontend:latest)" ]; then
              sudo docker image rm ${{ secrets.DOCKER_USERNAME }}/foodgram_frontend:latest
            fi
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/foodgram_frontend
            if [ -f ".env" ]; then
              rm .env
            fi 
            touch .env
            cat << EOF > .env
            DB_NAME=${{ secrets.DB_NAME }}
            POSTGRES_USER=${{ secrets.POSTGRES_USER }}
            POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
            DB_HOST=${{ secrets.DB_HOST }}
            DB_PORT=${{ secrets.DB_PORT }}
            SECRET_KEY=${{ secrets.SECRET_KEY }}
            ALLOWED_HOSTS=${{ secrets.ALLOWED_HOSTS }}
            DEBUG=${{ secrets.DEBUG }}
            EOF

            sudo docker compose -f foodgram/infra/docker-compose.production.yml up --build -d
            sudo docker-compose -f foodgram/infra/docker-compose.production.yml exec -T backend python manage.py migrate
            sudo docker-compose -f foodgram/infra/docker-compose.production.yml exec -T backend python manage.py collectstatic --no-input

  send_message:
    runs-on: ubuntu-22.04
    needs: deploy
    steps:
      - name: Telegram Message Notify
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: ${{ github.workflow }} успешно выполнен!!!

